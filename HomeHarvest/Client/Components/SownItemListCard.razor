@inject ISownRepository SownRepository

<Div Class="mt-1" >
					<ListGroupItem>
                        <Heading >@SownItem.Plant.Name (@Enum.GetName(typeof(Genus), SownItem.Plant.Genus))</Heading>
                        <Div Flex="Flex.JustifyContent.Between">
                            <Div>
                                <Span>Planted: @SownItem.PlantedOn.ToShortDateString()</Span>
                                <Span>Harvest: @SownItem.PlantedOn.AddDays(SownItem.Plant.GrowInWeeks * 7).ToShortDateString()</Span>
                                </Div> 
                                <Div>
                                    <Button  Color="Color.Primary" Clicked="@EditSownItem">Edit</Button>
                                    <Button  Color="Color.Danger" Clicked="@DeleteSownItem" ><Icon Name="@("fas fa-times")" /></Button>
                               </Div>
                        </Div>
                   </ListGroupItem>
 </Div>
       
@code {
    [Parameter]
    public SownDto SownItem{get;set;}
    [Parameter]    
    public EventCallback<int> DeleteSown { get; set; }
     [Parameter]    
    public EventCallback<int> EditSown { get; set; }
    private string ItemGenus ;

    
    protected override void OnInitialized()
    {     
        ItemGenus = Enum.GetName(typeof(Genus), SownItem.Plant.Genus);    
        base.OnInitialized();
    }

    private async Task DeleteSownItem() =>
        await DeleteSown.InvokeAsync(SownItem.Id);
    private async Task EditSownItem() =>
    await EditSown.InvokeAsync(SownItem.Id);

}
